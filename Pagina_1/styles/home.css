/* Primero he diseñado este pequeño sitio web para móvil para después adaptarlo
a un PC la pagina es responsiva, y aplique diferentes conococimientos como:
  * Attribute Selectors
  * Grid
  * Flexbox
  * Pseudo Classes
  * Media Queries
  * Units: px, vh, vw.
  * Margin, Padding
  * Transform
  * Animation
  * Gradient
  * etc.
*/



body{
  margin:0;
  padding: 0;

  /* Estas 3 lineas es con el fin de que el body cubra toda la pantalla en
  cualquier dispositivo */
  min-height: 100vh; /*En esta linea use Viewport Unit con respecto Height con
  el valor de 100 para que el body cobriera toda la ventana
  (100% of the height of the viwport)*/
  display: flex; /*Ahora hago uso de Flexbox para después poder usar flex-grow*/
  flex-direction:column; /*Aquí establezco la dirección que tendra mi contenido
  en este caso debe estar en columnas de lo contrario me mostrara los elementos
  en filas*/
}

/*Esta linea es esencial para que el contenido se ajuste a los contendedores y
no se desborden los elementos*/
*{
  box-sizing: border-box;
}

/* Bastante simple solo agrego estilos al encabezado e importe una fuente de
fonts.google.com*/
header{
  background-color: rgb(240, 215, 110);
  padding: 10px;
  font-family:'Nunito';
  font-size: 20px;
}

.container{
  flex-grow: 1;/*Ahora para mi contenedor principal estableci un crecimiento;
  flex-grow es para espeficificar cuanto crecera un elemento a diferencia de
  otros elementos dentro del mismo contenedor(body) dado que los demas elementos
  dentro del body no tienen flex-grow, le puse 1 como valor al .container entonces
  este contenedor abarcara todo el espacio sobrante*/
}





/* ////////////////////////////////////////////////////////////////////////// */





/* En las proximas lineas hasta la 88 es con el fin de realizar un menu Vertical */
.menu ul{
  margin: 0;
  padding: 0;
  list-style-type:none; /*Quito el estilo que tiene la lista*/
  overflow: hidden; /*Oculto todo sobrante por asi decirlo que este fuera del
  <Ul> auquen tambíen podía aplicarlo solo al div .menu */
}

/* Ahora dado que primero estoy diseñando la pagina web para movil le agrego al
li una anchura del 100% para que el menu sea vertical y se aprecie mejor en
pantallas chicas*/
.menu li{
  width: 100%;
}

.menu li a{
  display: block; /*Uso display block para dar como ese salto de linea a las
  etiquetas <a>*/
  padding: 10px 20px;
  background-color:rgb(240, 215, 110);
  color:black;
  text-decoration:none;
  font-size: 20px;
  border-right:1px solid white;
  border-top:1px solid white;
  text-align: center;
}

/*Hago uso de un Pseudo-class para al momento de seleccionar un opcion del menu
este cambio de color*/
.menu li a:hover{
  background-color: #EE845D;
  color:white;
}




/* ///////////////////////////////////////////////////////////////////////// */



/* Ahora me enfocare en mi contenido principal en el HTML se puede apreciar
que tengo 3 etiquetas div hijos del div .container esos 3 div son las 3 columnas
que tendra la seccion principal las cuales les puse el nombre de col-# le puse
ese nombre para hacer el uso de Grid-View
Info: https://www.techgeekbuzz.com/css-responsive-web-design-grid-view/ */

/* Con un Attribute Selectors seleccione todas las Classes que tuvieran en su
nombre los caracteres "col-" esto para seleccionar los 3 div de una. */
[class*="col-"]{
  float: left; /*Use el float left para las 3 columnas(div) estuvieran en linea*/
  padding: 10px;
  width: 100%; /*Como estoy diseñado para movil necisito que cada div(column)
  cumbra la anchura de la pantalla de esa manera se apreciara mejor la info.*/
}

/* Esta solo es para que la img cubra todo el contenedor .col-5 */
.col-5 img{
  width: 100%;
}

.col-4{
  font-size: 20px;
}

/* Esta es la columan 3 donde estaran las redes sociales dado que este div
tiene otro div(.Social-Medias) necesito centrar el div(.Social-Medias) en el
div(.col-3) por eso uso Flexbox y justify-content */
.col-3{
  display: flex;
  justify-content: center;
  font-size: 1rem;
  margin-bottom: 10px;
}

.Social-Medias{
  text-align: center;
  background: rgb(240, 215, 110);
  width: 70%;
}

/* Con Attribute Selectors selecciono todos mi iconos que tenga en su nombre los
caracteres "fa-" y les doy estilos; lo iconos fueron importados de  fontawesome.com*/
[class*="fa-"]{
  padding: 10px;
  font-size: 30px;
  text-decoration:none;
}

/* Para el color del icono instagram hize uso de un degradado */
.fa-instagram{
  background:linear-gradient(50deg, rgb(255, 238, 89), rgb(226, 135, 58),
  rgb(168, 30, 76), rgb(36, 0, 255));
  -webkit-background-clip:text;
  color:transparent;
}

.fa-facebook-square{
  color: blue;
}

.fa-twitter-square{
  color:#00ACEE;
}

/* Esta es una animacion sencilla que hace crecer un elemento usando scale() */
@keyframes Grow{
  50%{transform:scale(1.3, 1.3);}
}

/* Aquí llamo a la animación creada para cuando se pase el cursor o el dedo sobre
un icono estos creceran un poco */
[class*="fa-"]:hover{
  animation: Grow 2s;
}


/* ///////////////////////////////////////////////////////////////////////// */





/* Este es el pie de la pagina */
footer{
  background-color: rgb(240, 215, 110);
  padding: 10px;
  text-align:center;
}




/*//////////////////////////////////////////////////////////////////////////*/

/* Finalmente hago uso de Media Queries para adaptar este sitio web a Escritorios */

/* For Desktops */
@media only screen and (min-width: 768px) {

  /* Aquí lo unico que hago es cambiar la forma en que se visualice mi menu porque
  ahora quiero un menu horizontal */
  .menu li{
    width: auto;
    float: left;
  }

  /* Aquí unicamente uso display:block para que los las etiquesa <a> que tiene
  iconos tenga un salto de linea. */
  [class*="fa-"]{
    display: block;
  }

  /* Use valores por defecto para usar el grid-view pero de todas esas solo estoy
  implementando 3 que son mis 3 div(columns) hijos del div .container
  info: https://www.techgeekbuzz.com/css-responsive-web-design-grid-view/*/
  .col-1 {width: 8.33%;}
  .col-2 {width: 16.66%;}
  .col-3 {width: 25%;} /*My Column 3*/
  .col-4 {width: 33.33%;} /*My Column 2*/
  .col-5 {width: 41.66%;} /*My Column 1*/
  .col-6 {width: 50%;}
  .col-7 {width: 58.33%;}
  .col-8 {width: 66.66%;}
  .col-9 {width: 75%;}
  .col-10 {width: 83.33%;}
  .col-11 {width: 91.66%;}
  .col-12 {width: 100%;}
}


/* . */
